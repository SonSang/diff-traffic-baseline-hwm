// generated by Fast Light User Interface Designer (fluid) version 1.0300


static void update_tod(double val) {
  sim_win->time_offset = 60*60*val;
  sim_win->redraw();
}

static void toggle_lights(bool val) {
  sim_win->do_lights = val;
  sim_win->redraw();
}

void set_network_draw(int val) {
  sim_win->network_draw = (fltkview::network_draw_mode)val;
  sim_win->redraw();
}

static void toggle_screenshot(bool val) {
  sim_win->screenshot_mode = val;
  sim_win->redraw();
}

static void toggle_go(bool val) {
  sim_win->go = val;
  sim_win->redraw();
}

static void toggle_throttle(double val) {
  sim_win->throttle = val;
  sim_win->set_throttle();
  sim_win->redraw();
}

static void set_bg_saturation(double val) {
  sim_win->bg_saturation = val;
  sim_win->redraw();
}

static void set_fg_saturation(double val) {
  sim_win->fg_saturation = val;
  sim_win->redraw();
}

static void set_imode(int val) {
  sim_win->imode = (fltkview::interaction_mode)val;
  sim_win->redraw();
}

static void set_obey_scale(bool val) {
  sim_win->view.obey_scale = val;
  sim_win->redraw();
}

static void set_path_param(double val) {
  sim_win->path_param = val;
  sim_win->redraw();
}

static void set_obey_position(bool val) {
  sim_win->view.obey_position = val;
  sim_win->redraw();
}

static void set_path_auto_advance(bool val) {
  sim_win->path_auto_advance = val;
  sim_win->path_param = 0;
  sim_win->redraw();
}

static void set_path_param_rate(double val) {
  sim_win->path_param_rate = val;
}

static void toggle_show_lengths(bool val) {
  sim_win->show_lengths = val;
  sim_win->redraw();
}

static void toggle_cars(bool val) {
  sim_win->do_cars = val;
  sim_win->redraw();
}

fltkview *sim_win=(fltkview *)0;

static void cb_Time(Fl_Slider* o, void*) {
  update_tod(o->value());
}

static void cb_Draw(Fl_Light_Button* o, void*) {
  toggle_lights(o->value());
}

static void cb_Roads(Fl_Choice* o, void*) {
  set_network_draw(o->value());
}

Fl_Menu_Item menu_Roads[] = {
 {"None", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Abstract", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Textured", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

static void cb_Record(Fl_Light_Button* o, void*) {
  toggle_screenshot(o->value());
}

static void cb_Go(Fl_Light_Button* o, void*) {
  toggle_go(o->value());
}

static void cb_Throttle(Fl_Light_Button* o, void*) {
  toggle_throttle(o->value());
}

static void cb_bg(Fl_Slider* o, void*) {
  set_bg_saturation(o->value());
}

static void cb_fg(Fl_Slider* o, void*) {
  set_fg_saturation(o->value());
}

static void cb_Mode(Fl_Choice* o, void*) {
  set_imode(o->value());
}

Fl_Menu_Item menu_Mode[] = {
 {"REGION_MANIP", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 10, 0},
 {"ARC_MANIP", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 10, 0},
 {"MC_PREVIEW", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 10, 0},
 {"BACK_MANIP", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 10, 0},
 {"NONE", 0,  0, 0, 0, FL_NORMAL_LABEL, 0, 10, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Slider *view_slider=(Fl_Slider *)0;

static void cb_view_slider(Fl_Slider* o, void*) {
  set_path_param(o->value());
}

static void cb_Scale(Fl_Light_Button* o, void*) {
  set_obey_scale(o->value());
}

static void cb_Position(Fl_Light_Button* o, void*) {
  set_obey_position(o->value());
}

static void cb_Follow(Fl_Light_Button* o, void*) {
  set_path_auto_advance(o->value());
}

static Fl_Slider *view_rate_slider=(Fl_Slider *)0;

static void cb_view_rate_slider(Fl_Slider* o, void*) {
  set_path_param_rate(o->value());
}

static void cb_Draw1(Fl_Light_Button* o, void*) {
  toggle_show_lengths(o->value());
}

static void cb_Draw2(Fl_Light_Button* o, void*) {
  toggle_cars(o->value());
}

static Fl_Double_Window* make_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(2105, 1220);
    w = o;
    { sim_win = new fltkview(10, 5, 1920, 1080);
      sim_win->box(FL_DOWN_FRAME);
      sim_win->color(FL_BACKGROUND_COLOR);
      sim_win->selection_color(FL_BACKGROUND_COLOR);
      sim_win->labeltype(FL_NORMAL_LABEL);
      sim_win->labelfont(0);
      sim_win->labelsize(14);
      sim_win->labelcolor(FL_FOREGROUND_COLOR);
      sim_win->align(Fl_Align(FL_ALIGN_CENTER));
      sim_win->when(FL_WHEN_RELEASE);
      sim_win->window()->hotspot(sim_win);
    } // fltkview* sim_win
    { Fl_Slider* o = new Fl_Slider(5, 1089, 2095, 26, "Time of day");
      o->type(1);
      o->maximum(24);
      o->step(0.05);
      o->callback((Fl_Callback*)cb_Time);
      o->value(sim_win->time_offset);
    } // Fl_Slider* o
    { Fl_Light_Button* o = new Fl_Light_Button(1940, 591, 150, 25, "Draw lights");
      o->callback((Fl_Callback*)cb_Draw);
      o->value(sim_win->do_lights);
    } // Fl_Light_Button* o
    { Fl_Choice* o = new Fl_Choice(1986, 529, 110, 25, "Roads");
      o->down_box(FL_BORDER_BOX);
      o->callback((Fl_Callback*)cb_Roads);
      o->menu(menu_Roads);
      o->value(sim_win->network_draw);
    } // Fl_Choice* o
    { Fl_Light_Button* o = new Fl_Light_Button(1945, 38, 147, 25, "Record");
      o->callback((Fl_Callback*)cb_Record);
      o->value(sim_win->screenshot_mode);
    } // Fl_Light_Button* o
    { Fl_Light_Button* o = new Fl_Light_Button(1940, 75, 70, 25, "Go!");
      o->callback((Fl_Callback*)cb_Go);
      o->value(sim_win->go);
    } // Fl_Light_Button* o
    { Fl_Light_Button* o = new Fl_Light_Button(2015, 75, 80, 25, "Throttle");
      o->callback((Fl_Callback*)cb_Throttle);
      o->value(sim_win->throttle);
    } // Fl_Light_Button* o
    { Fl_Slider* o = new Fl_Slider(1945, 636, 150, 20, "bg saturation");
      o->type(1);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_bg);
      o->align(Fl_Align(FL_ALIGN_TOP));
      o->value(sim_win->bg_saturation);
    } // Fl_Slider* o
    { Fl_Slider* o = new Fl_Slider(1945, 677, 150, 20, "fg saturation");
      o->type(1);
      o->step(0.01);
      o->callback((Fl_Callback*)cb_fg);
      o->align(Fl_Align(FL_ALIGN_TOP));
      o->value(sim_win->fg_saturation);
    } // Fl_Slider* o
    { Fl_Choice* o = new Fl_Choice(1985, 5, 110, 25, "Mode");
      o->down_box(FL_BORDER_BOX);
      o->callback((Fl_Callback*)cb_Mode);
      o->menu(menu_Mode);
      o->value(sim_win->imode);
    } // Fl_Choice* o
    { Fl_Slider* o = view_slider = new Fl_Slider(5, 1136, 2095, 20, "View param");
      view_slider->type(1);
      view_slider->callback((Fl_Callback*)cb_view_slider);
      o->value(sim_win->path_param);
    } // Fl_Slider* view_slider
    { Fl_Light_Button* o = new Fl_Light_Button(2020, 790, 80, 25, "Scale");
      o->callback((Fl_Callback*)cb_Scale);
      o->value(sim_win->view.obey_scale);
    } // Fl_Light_Button* o
    { Fl_Light_Button* o = new Fl_Light_Button(2020, 760, 78, 25, "Position");
      o->callback((Fl_Callback*)cb_Position);
      o->value(sim_win->view.obey_position);
    } // Fl_Light_Button* o
    { Fl_Light_Button* o = new Fl_Light_Button(1935, 770, 78, 25, "Follow t");
      o->callback((Fl_Callback*)cb_Follow);
      o->value(sim_win->path_auto_advance);
    } // Fl_Light_Button* o
    { Fl_Slider* o = view_rate_slider = new Fl_Slider(5, 1173, 2095, 22, "View param rate");
      view_rate_slider->type(1);
      view_rate_slider->maximum(0.2);
      view_rate_slider->callback((Fl_Callback*)cb_view_rate_slider);
      o->value(sim_win->path_param_rate);
    } // Fl_Slider* view_rate_slider
    { Fl_Light_Button* o = new Fl_Light_Button(1945, 705, 150, 25, "Draw lengths");
      o->callback((Fl_Callback*)cb_Draw1);
      o->value(sim_win->show_lengths);
    } // Fl_Light_Button* o
    { Fl_Light_Button* o = new Fl_Light_Button(1940, 560, 150, 25, "Draw cars");
      o->callback((Fl_Callback*)cb_Draw2);
      o->value(sim_win->do_cars);
    } // Fl_Light_Button* o
    o->end();
  } // Fl_Double_Window* o
  Fl::focus(sim_win);
  return w;
}
